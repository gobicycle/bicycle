version: '3'

services:

  payment-postgres:
    image: postgres:14
    container_name: payment_processor_db
    volumes:
    - ./deploy/db/01_init.up.sql:/docker-entrypoint-initdb.d/01_init.up.sql
    - ./deploy/db/02_create_readonly_user.sh:/docker-entrypoint-initdb.d/02_create_readonly_user.sh
    - bicycle-postgres:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_READONLY_PASSWORD: ${POSTGRES_READONLY_PASSWORD} # For grafana
    networks:
      - p-network

  payment-processor:
    image: payment-processor
    container_name: payment_processor
    ports:
      - "127.0.0.1:8081:${API_PORT}"
    restart: unless-stopped
    environment:
      DB_URI: ${DB_URI} # example: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@payment_processor_db:5432/${POSTGRES_DB}"
      API_PORT: ${API_PORT}
      API_TOKEN: ${API_TOKEN}
      COLD_WALLET: ${COLD_WALLET}
      JETTONS: ${JETTONS}
      LITESERVER: ${LITESERVER}
      LITESERVER_KEY: ${LITESERVER_KEY}
      SEED: ${SEED}
      TON_CUTOFFS: ${TON_CUTOFFS}
      IS_TESTNET: ${IS_TESTNET}
    networks:
      - p-network

  payment-grafana:
    image: grafana/grafana:latest
    container_name: payment_grafana
    restart: always
    ports:
      - '127.0.0.1:3001:3000'
    volumes:
      - ./deploy/grafana/main/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./deploy/grafana/main/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./deploy/grafana/main/dashboards:/etc/dashboards
    environment:
      GF_SECURITY_ADMIN_USER: admin # TODO: change
      GF_SECURITY_ADMIN_PASSWORD: admin # TODO: change
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_READONLY_PASSWORD: ${POSTGRES_READONLY_PASSWORD}
    networks:
      - p-network

  payment-rabbitmq:
    image: library/rabbitmq:3-management
    container_name: payment_rabbitmq
    restart: always
    ports:
      - '127.0.0.1:5672:5672'
    networks:
      - p-network

  payment-prometheus:
    image: prom/prometheus:latest
    container_name: payment_prometheus
    restart: always
    volumes:
      - ./deploy/prometheus/main:/etc/prometheus
    user: "$UID:$GID"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - p-network

  separate-api:
    image: payment-api
    container_name: payment_api
    ports:
      - "127.0.0.1:8082:${API_PORT}"
    restart: unless-stopped
    environment:
      DB_URI: ${DB_URI} # example: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@payment_processor_db:5432/${POSTGRES_DB}"
      API_PORT: ${API_PORT}
      API_TOKEN: ${API_TOKEN}
      JETTONS: ${JETTONS}
      LITESERVER: ${LITESERVER}
      LITESERVER_KEY: ${LITESERVER_KEY}
      SEED: ${SEED}
      TON_CUTOFFS: ${TON_CUTOFFS}
      IS_TESTNET: ${IS_TESTNET}
    networks:
      - p-network

networks:
  p-network:
    driver: bridge

volumes:
  bicycle-postgres:
    external: false